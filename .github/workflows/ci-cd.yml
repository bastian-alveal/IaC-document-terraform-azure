name: Terraform CI/CD

on:
  workflow_dispatch:   # Se ejecuta solo manualmente

permissions:
  id-token: write
  contents: read

jobs:
  blob:
    name: Deploy Blob Storage
    runs-on: ubuntu-latest
    environment: blob-approval
    defaults:
      run:
        working-directory: IaC-azure-blob-storage
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CLIENT_SECRET }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.7

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan -out=tfplan

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan

  network:
    name: Deploy Network
    runs-on: ubuntu-latest
    needs: blob
    environment: network-approval
    defaults:
      run:
        working-directory: IaC-azure-networks
    steps:
      - uses: actions/checkout@v4
      - uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          client-secret: ${{ secrets.AZURE_CLIENT_SECRET }}
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.7
      - run: terraform init
      - run: terraform plan -out=tfplan
      - run: terraform apply -auto-approve tfplan

  bd:
    name: Deploy Database
    runs-on: ubuntu-latest
    needs: network
    environment: bd-approval
    defaults:
      run:
        working-directory: IaC-azure-bd
    steps:
      - uses: actions/checkout@v4
      - uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          client-secret: ${{ secrets.AZURE_CLIENT_SECRET }}
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.7
      - run: terraform init
      - run: terraform plan -out=tfplan
      - run: terraform apply -auto-approve tfplan

  containerapp:
    name: Deploy Container App
    runs-on: ubuntu-latest
    needs: bd
    environment: container-approval
    defaults:
      run:
        working-directory: IaC-azure-containerapp
    steps:
      - uses: actions/checkout@v4
      - uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          client-secret: ${{ secrets.AZURE_CLIENT_SECRET }}
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.7
      - run: terraform init
      - run: terraform plan -out=tfplan
      - run: terraform apply -auto-approve tfplan

  appservice:
    name: Deploy App Service
    runs-on: ubuntu-latest
    needs: containerapp
    environment: appservice-approval
    defaults:
      run:
        working-directory: IaC-azure-appservice
    steps:
      - uses: actions/checkout@v4
      - uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          client-secret: ${{ secrets.AZURE_CLIENT_SECRET }}
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.7
      - run: terraform init
      - run: terraform plan -out=tfplan
      - run: terraform apply -auto-approve tfplan

  vm-test-red-bd:
    name: Deploy VM Test Red BD
    runs-on: ubuntu-latest
    needs: appservice
    environment: vm-test-red-bd-approval
    defaults:
      run:
        working-directory: IaC-azure-vm-test-red-bd
    steps:
      - uses: actions/checkout@v4
      - uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          client-secret: ${{ secrets.AZURE_CLIENT_SECRET }}
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.7
      - run: terraform init
      - run: terraform plan -out=tfplan
      - run: terraform apply -auto-approve tfplan

  vm-tailscale:
    name: Deploy VM with Tailscale
    runs-on: ubuntu-latest
    needs: vm-test-red-bd
    environment: vmtailscale-approval
    defaults:
      run:
        working-directory: IaC-azure-vm-tailscale
    steps:
      - uses: actions/checkout@v4
      - uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          client-secret: ${{ secrets.AZURE_CLIENT_SECRET }}
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.7
      - run: terraform init
      - run: terraform plan -out=tfplan
      - run: terraform apply -auto-approve tfplan
